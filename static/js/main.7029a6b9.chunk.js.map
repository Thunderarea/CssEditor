{"version":3,"sources":["components/Header.js","components/Preview.js","components/CssEditorFunctions.js","components/Declaration.js","components/CssRule.js","components/CssEditor.js","components/Body.js","components/App.js","index.js"],"names":["Header","props","handleFileChange","e","filesList","target","files","length","html","styleSheets","i","reader","FileReader","onload","text","result","type","push","name","content","readAsText","setFiles","handleInspect","newValue","state","inspect","setInspect","setState","id","multiple","onChange","onClick","this","width","height","viewBox","fill","xmlns","fillRule","d","React","Component","Preview","getBlobURL","code","blob","Blob","URL","createObjectURL","handleClick","el","elementsCss","element","cssRules","findCSSRules","innerIframeDoc","removeHighlight","removeEventListener","Highlight","updateHighlightedPosition","outerHighlight","current","style","display","handleLoad","outerIframeDoc","outerIframe","contentDocument","removeChild","firstElementChild","forceUpdate","getIframeContent","backgroundColor","textAlign","fontSize","margin","padding","overflow","title","src","border","onLoad","handleInnerLoad","ref","innerIframe","position","pointerEvents","innerHighlight","boxSizing","createRef","currentHighlighted","bind","rect","getBoundingClientRect","window","getComputedStyle","left","parseInt","getPropertyValue","top","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","styleLinks","head","querySelectorAll","parts","styleEl","forEach","attributes","href","value","trim","split","document","createElement","textContent","parentNode","replaceChild","splice","addEventListener","nextProps","next","iframeContent","srcDoc","ReactDOM","createPortal","doc","sheets","parent","j","selectorText","selector","item","unshift","fileName","ownerNode","css","preventKeyDefault","key","ctrlKey","keyCode","preventDefault","onBlur","setAttribute","clickEditable","contentEditable","focus","Declaration","focusEditableElement","decClass","startComment","endComment","checked","DecProperty","DecValue","Checkbox","blur","nextDec","nextState","EnDisCheckbox","relatedTarget","remove","styleObject","removeProperty","property","setProperty","focused","className","spellCheck","onKeyDown","propertyKeyListener","handleBlur","onMouseDown","onKeyUp","handleChange","valueKeyListener","CSSRule","focusNext","focusedID","focusSwitch","initializeDeclarations","newItem","dec","items","declaration","addDeclaration","removeDeclaration","filter","nextDeclaration","currentID","disabled","classList","contains","activeElement","onMouseUp","handleMouseUp","handleMouseDown","map","CSSEditor","getElementsDescription","description","tagName","toLowerCase","class_name","rule","cssText","Body","setElementsCss","App","render","getElementById"],"mappings":"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","file":"static/js/main.7029a6b9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inspect: false\r\n        };\r\n    }\r\n\r\n    handleFileChange = (e) => {\r\n        let filesList = e.target.files;\r\n        const length = filesList.length;\r\n        if (length !== 0) {\r\n            var files = {\r\n                html: \"\",\r\n                styleSheets: []\r\n            };\r\n            var i = 0;\r\n            var reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                let text = reader.result;\r\n                if (filesList[i].type === \"text/html\") \r\n                    files.html = text;\r\n                else if (filesList[i].type === \"text/css\") \r\n                    files.styleSheets.push({name: filesList[i].name, content: text});\r\n                else ;//send a message to user about what type of file can upload\r\n                if (++i < length) \r\n                    reader.readAsText(filesList[i]);\r\n                else \r\n                    this\r\n                        .props\r\n                        .setFiles(files);\r\n                }\r\n            reader.readAsText(filesList[i]);\r\n        }\r\n    }\r\n\r\n    handleInspect = () => {\r\n        let newValue = !this.state.inspect;\r\n        this\r\n            .props\r\n            .setInspect(newValue);\r\n        this.setState({inspect: newValue});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"app_header\">\r\n                <div>\r\n                    <input type=\"file\" multiple onChange={(e) => this.handleFileChange(e)}/>\r\n                </div>\r\n                <div id=\"inspect\" onClick={this.handleInspect}>\r\n                    <svg\r\n                        \r\n                        width=\"1em\"\r\n                        height=\"100%\"\r\n                        viewBox=\"0 0 16 16\"\r\n                        fill= {(this.state.inspect) ? \"white\" : \"currentColor\"}\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            fillRule=\"evenodd\"\r\n                            d=\"M1.5 3A1.5 1.5 0 0 1 3 1.5h10A1.5 1.5 0 0 1 14.5 3v5a.5.5 0 0 1-1 0V3a.5.5 0 0 0-.5-.5H3a.5.5 0 0 0-.5.5v10a.5.5 0 0 0 .5.5h4a.5.5 0 0 1 0 1H3A1.5 1.5 0 0 1 1.5 13V3z\"/>\r\n                        <path\r\n                            fillRule=\"evenodd\"\r\n                            d=\"M11.5 6a.5.5 0 0 0-.5-.5H6a.5.5 0 0 0-.5.5v5a.5.5 0 0 0 1 0V6.5H11a.5.5 0 0 0 .5-.5z\"/>\r\n                        <path\r\n                            fillRule=\"evenodd\"\r\n                            d=\"M5.646 5.646a.5.5 0 0 0 0 .708l8 8a.5.5 0 0 0 .708-.708l-8-8a.5.5 0 0 0-.708 0z\"/>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass Preview extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.outerIframe = React.createRef();\r\n        this.innerIframe = React.createRef();\r\n        this.outerHighlight = React.createRef();\r\n        this.innerHighlight = React.createRef();\r\n        this.outerIframeDoc = null;\r\n        this.innerIframeDoc = null;\r\n        this.currentHighlighted = null;\r\n\r\n        this.Highlight = this.Highlight.bind(this);\r\n        this.updateHighlightedPosition = this.updateHighlightedPosition.bind(this);\r\n    }\r\n\r\n    getBlobURL = (code, type) => {\r\n        const blob = new Blob([code], {type});\r\n        return URL.createObjectURL(blob);\r\n    }\r\n\r\n    Highlight(e) {\r\n        if(this.props.inspect) {\r\n            this.currentHighlighted = e.target;\r\n            let rect = e.target.getBoundingClientRect();\r\n            let style = window.getComputedStyle(e.target);\r\n            this.outerHighlight.current.style.display = \"block\";\r\n            this.outerHighlight.current.style.left = rect.left - parseInt(style.getPropertyValue(\"margin-left\")) + \"px\";\r\n            this.outerHighlight.current.style.top = rect.top - parseInt(style.getPropertyValue(\"margin-top\")) + \"px\"; \r\n            this.outerHighlight.current.style.height = rect.height - (parseInt(style.getPropertyValue(\"border-top-width\")) + parseInt(style.getPropertyValue(\"border-bottom-width\"))) + \"px\";\r\n            this.outerHighlight.current.style.width = rect.width - (parseInt(style.getPropertyValue(\"border-left-width\")) + parseInt(style.getPropertyValue(\"border-right-width\"))) + \"px\";\r\n            \r\n            this.outerHighlight.current.style.borderTopWidth = style.getPropertyValue(\"margin-top\");\r\n            this.outerHighlight.current.style.borderBottomWidth = style.getPropertyValue(\"margin-bottom\");\r\n            this.outerHighlight.current.style.borderLeftWidth = style.getPropertyValue(\"margin-left\");\r\n            this.outerHighlight.current.style.borderRightWidth = style.getPropertyValue(\"margin-right\");\r\n            \r\n            this.outerHighlight.current.style.paddingTop = style.getPropertyValue(\"border-top-width\");\r\n            this.outerHighlight.current.style.paddingBottom = style.getPropertyValue(\"border-bottom-width\");\r\n            this.outerHighlight.current.style.paddingLeft = style.getPropertyValue(\"border-left-width\");\r\n            this.outerHighlight.current.style.paddingRight = style.getPropertyValue(\"border-right-width\");\r\n            \r\n            this.innerHighlight.current.style.borderTopWidth = style.getPropertyValue(\"padding-top\");\r\n            this.innerHighlight.current.style.borderBottomWidth = style.getPropertyValue(\"padding-bottom\");\r\n            this.innerHighlight.current.style.borderLeftWidth = style.getPropertyValue(\"padding-left\");\r\n            this.innerHighlight.current.style.borderRightWidth = style.getPropertyValue(\"padding-right\");\r\n        } else this.removeHighlight();\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        if(this.props.inspect) {\r\n            let el = e.target;\r\n            if(el) {\r\n                this.props.elementsCss({\r\n                    element: el, \r\n                    cssRules: findCSSRules(el, this.innerIframeDoc)\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    removeHighlight = () => {\r\n        this.innerIframeDoc.removeEventListener(\"mousedown\", this.handleClick);\r\n        this.innerIframeDoc.removeEventListener(\"mouseover\", this.Highlight);\r\n        this.innerIframeDoc.removeEventListener(\"scroll\", this.updateHighlightedPosition);\r\n        this.outerHighlight.current.style.display = \"none\";\r\n    }\r\n\r\n    updateHighlightedPosition() {\r\n        if(this.currentHighlighted) {\r\n            let rect = this.currentHighlighted.getBoundingClientRect();\r\n            let style = window.getComputedStyle(this.currentHighlighted);\r\n            this.outerHighlight.current.style.left = rect.left - parseInt(style.getPropertyValue(\"margin-left\")) + \"px\";\r\n            this.outerHighlight.current.style.top = rect.top - parseInt(style.getPropertyValue(\"margin-top\"))  + \"px\"; \r\n        }\r\n    }\r\n\r\n    handleInnerLoad(e) {\r\n        this.innerIframeDoc = this.innerIframe.current.contentDocument;\r\n        let styleLinks = this.innerIframeDoc.head.querySelectorAll(\"link\");\r\n        \r\n        if(styleLinks.length) {\r\n            if (this.props.files.styleSheets.length) {\r\n                let styleSheets = [...this.props.files.styleSheets];\r\n                let name = \"\";\r\n                let parts = [];\r\n                let styleEl = null;\r\n                styleLinks.forEach(el => {\r\n                    parts = el.attributes.href.value.trim().split(\"/\");\r\n                    name = parts[parts.length - 1];\r\n                    \r\n                    for (let i = 0; i < styleSheets.length; i++) {\r\n                        if (styleSheets[i].name === name) {\r\n                            styleEl = document.createElement(\"style\");\r\n                            styleEl.id = el.attributes.href.value.trim();\r\n                            styleEl.textContent = styleSheets[i].content;\r\n                            el.parentNode.replaceChild(styleEl, el);\r\n                            styleSheets.splice(i,1);\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n            } else ;//warn the user that does not have select any css file\r\n        } else ;//warn the user that deos not have external stylesheets in his html file\r\n        this.outerIframeDoc.addEventListener(\"mouseenter\", () => {\r\n            if(this.props.inspect) {\r\n                this.innerIframeDoc.addEventListener(\"mousedown\", this.handleClick);\r\n                this.innerIframeDoc.addEventListener(\"mouseover\", this.Highlight);\r\n                this.innerIframeDoc.addEventListener(\"scroll\", this.updateHighlightedPosition);\r\n            }\r\n        }, true);\r\n        this.outerIframeDoc.addEventListener(\"mouseleave\", this.removeHighlight, true);\r\n    }\r\n\r\n    handleLoad = () => {\r\n        this.outerIframeDoc = this.outerIframe.current.contentDocument;\r\n        this\r\n            .outerIframeDoc\r\n            .removeChild(this.outerIframeDoc.firstElementChild);\r\n        //removes the html content (with the html tag) to can add manually the html from html tag\r\n        this.forceUpdate();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        if((nextProps.inspect !== this.props.inspect) || compareProps(nextProps, this.props)) return false;\r\n        return true;\r\n    }\r\n\r\n    getIframeContent = () => {\r\n        if(this.props.files.html === \"\") {\r\n            return (\r\n                <html style={{height: \"100%\", width: \"100%\"}}>\r\n                    <head>\r\n                        <title>Instructions</title>\r\n                    </head>\r\n                    <body style={{backgroundColor: \"white\", textAlign: \"center\"}}>\r\n                        <h1>From Scratch<sup style={{fontSize: \"large\"}}>BETA</sup></h1>\r\n                        <h2>Instructions</h2>\r\n                        <div style={{width: \"fit-content\", margin: \"auto\"}}>\r\n                            <ol style={{textAlign: \"left\"}}>\r\n                                <li>Choose your files from \"choose files\" button.\r\n                                    <ul>\r\n                                        <li>In your files must be included only one html file and the css files that are linked with the html file</li>\r\n                                        <li>All files must be in the same folder</li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li>Your html file that you have choose will open</li>\r\n                                <li>Press the inspect button</li>\r\n                                <li>Hover over the elements. Click on to see it's css in the side panel (only the simple style rules. Not import, media rules,keyframes etc)</li>\r\n                                <li>The css editor functions as the browsers developers tools css editor</li>\r\n                                <li>You can change the existing css and add new declarations in the existing classes, ids etc. You cannot edit the selectors</li>\r\n                            </ol>\r\n                        </div>\r\n                    </body>\r\n                </html>\r\n            );\r\n        } else {\r\n            let bodyStyle = {\r\n                margin: 0,\r\n                padding: 0,\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                overflow: \"hidden\"\r\n            };\r\n            let innerIframe = {\r\n                border: \"none\",\r\n                margin: 0,\r\n                backgroundColor: \"white\"\r\n            };\r\n            let outerHighlighter = {\r\n                position: \"absolute\",\r\n                display: \"none\",\r\n                border: \"0 solid rgba(249, 175, 63, 0.69)\",\r\n                backgroundColor: \"rgba(251, 245, 61, 0.7)\",\r\n                pointerEvents: \"none\"\r\n            };\r\n            let innerHighlighter = {\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                border: \"0 solid rgba(108, 210, 108, 0.78)\",\r\n                boxSizing: \"border-box\",\r\n                backgroundColor: \"rgba(99, 183, 255, 0.88)\",\r\n                pointerEvents: \"none\"\r\n            };\r\n            return (\r\n                <html style={{height: \"100%\", width: \"100%\"}}>\r\n                    <head>\r\n                        <title>Outer Iframe</title>\r\n                    </head>\r\n                    <body style={bodyStyle}>\r\n                        <iframe title=\"inner iframe\" \r\n                                src={this.getBlobURL(this.props.files.html, \"text/html\")} \r\n                                height=\"100%\" \r\n                                width=\"100%\" \r\n                                style={innerIframe}\r\n                                onLoad={(e) => this.handleInnerLoad(e)}\r\n                                ref={this.innerIframe}>\r\n                        </iframe>\r\n                        <div id=\"highlighter_outer\" ref={this.outerHighlight} style={outerHighlighter}>\r\n                            <div id=\"highlighter_inner\" ref={this.innerHighlight} style={innerHighlighter}></div>\r\n                        </div>\r\n                    </body>\r\n                </html>\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        this\r\n            .outerIframe\r\n            .current\r\n            .addEventListener(\"load\", this.handleLoad);\r\n    }\r\n\r\n    render() {\r\n        let iframeContent = this.getIframeContent();\r\n        \r\n        return (\r\n            <iframe title=\"outer_iframe\" id=\"outer_iframe\" ref={this.outerIframe} srcDoc=\"<!DOCTYPE html>\">\r\n                {this.outerIframeDoc && ReactDOM.createPortal(iframeContent, this.outerIframeDoc)}\r\n            </iframe>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Preview;\r\n\r\nfunction findCSSRules(el, doc) {\r\n    let sheets = doc.styleSheets;\r\n    let parent = el.parentNode;\r\n    let cssRules = [];\r\n    for (let i = 0; i < sheets.length; i++) {\r\n        for (let j = 0; j < sheets[i].cssRules.length; j++) {\r\n            if (sheets[i].cssRules[j].type === 1) {\r\n                sheets[i].cssRules[j].selectorText.split(\",\").forEach((selector) => {\r\n                    parent.querySelectorAll(\":scope > \"+selector.trim()).forEach((item) => {\r\n                      if (item === el) {\r\n                        cssRules.unshift({\r\n                            fileName: sheets[i].ownerNode.id,\r\n                            css: sheets[i].cssRules[j]\r\n                        });\r\n                      }\r\n                    });\r\n                  });\r\n            }\r\n        }\r\n    } \r\n    return cssRules;\r\n}\r\n\r\n\r\n//Is it need?\r\nfunction compareProps(next, current) {\r\n    if(next.files !== current.files) return false;\r\n    return true;\r\n}\r\n\r\n/*\r\nwhen a declaration is commented must be disabled\r\n*/","export const preventKeyDefault = (e) => {\r\n    let key = 0;\r\n    if (e.ctrlKey) {\r\n        //ctrlKey + C, ctrlKey + V, ctrlKey + X\r\n        if ((e.keyCode !== 67) && (e.keyCode !== 86) && (e.keyCode !== 88)) {\r\n            e.preventDefault();\r\n        }\r\n    } else if (e.keyCode === 13 || (e.keyCode === 186 && e.key === \";\")) {\r\n        e.preventDefault();\r\n        key = e.keyCode;\r\n    }\r\n    return key;\r\n}\r\n\r\nexport const onBlur = (e) => {\r\n    let target = e.target;\r\n    e.preventDefault();\r\n    target.setAttribute(\"contenteditable\", \"false\");\r\n    return !target.textContent.trim();\r\n}\r\n\r\nexport const clickEditable = (e) => {\r\n    let target = e.target;\r\n    if (target.contentEditable !== \"true\") { //may be inherit, initial...\r\n        e.preventDefault();\r\n        target.setAttribute(\"contenteditable\", \"true\");\r\n        target.focus();\r\n    }\r\n}","import React from \"react\";\r\nimport {preventKeyDefault, onBlur, clickEditable} from \"./CssEditorFunctions.js\";\r\n\r\nclass Declaration extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            decClass: \"\",\r\n            startComment: \"  \",\r\n            endComment: \"\",\r\n            checked: true\r\n        };\r\n        this.DecProperty = React.createRef();\r\n        this.DecValue = React.createRef();\r\n        this.Checkbox = React.createRef();\r\n    }\r\n\r\n    propertyKeyListener(e) {\r\n        if (preventKeyDefault(e) === 13) {\r\n            let target = e.target;\r\n            (target.textContent.trim())\r\n                ? this.focusEditableElement(this.DecValue.current)\r\n                : target.blur();\r\n        }\r\n    }\r\n\r\n    valueKeyListener(e) {\r\n        let key = preventKeyDefault(e);\r\n        if (key === 13) {\r\n            let target = e.target;\r\n            (target.textContent.trim())\r\n                ? this\r\n                    .props\r\n                    .nextDec(this.props.id)\r\n                : this.focusEditableElement(this.DecProperty.current);\r\n        } else if (key === 186) \r\n            this.props.nextDec(this.props.id);\r\n        }\r\n    \r\n    handleMouse(nextState) {\r\n        this\r\n            .props\r\n            .EnDisCheckbox(nextState);\r\n    }\r\n\r\n    handleBlur(e, value) {\r\n        if (value) {\r\n            if (onBlur(e) && (e.relatedTarget !== this.DecProperty.current)) {\r\n                this.props.remove(this.props.id);\r\n                this.props.styleObject.removeProperty(this.property);\r\n            }\r\n        } else {\r\n            if (onBlur(e) || ((e.relatedTarget !== this.DecValue.current) && !this.DecValue.current.textContent.trim())) {\r\n                this.props.remove(this.props.id);\r\n                this.props.styleObject.removeProperty(this.property);\r\n            }\r\n        }\r\n    }\r\n\r\n    focusEditableElement = (el) => {\r\n        el.setAttribute(\"contentEditable\", \"true\");\r\n        el.focus();\r\n    }\r\n\r\n    handleCheckChange(e) {\r\n        let target = e.target;\r\n        if (target.checked) {\r\n            this.setState({decClass: \"\", startComment: \"  \", endComment: \"\", checked: true});\r\n        } else {\r\n            this.setState({decClass: \"is_comment\", startComment: \"  /*\", endComment: \"*/\", checked: false});\r\n        }\r\n    }\r\n\r\n    handleChange() {\r\n        this.props.styleObject.setProperty(this.DecProperty.current.textContent.trim(), this.DecValue.current.textContent.trim(), \"\");\r\n        let value = this.props.styleObject.getPropertyValue(this.DecProperty.current.textContent.trim());\r\n        if(value !== \"\") this.property = this.DecProperty.current.textContent.trim();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.focusEditableElement(this.DecProperty.current);\r\n        this.property = this.props.property;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        //this.Checkbox.current.checked = this.state.checked;\r\n    }\r\n\r\n    render() {\r\n        if (this.props.focused) this.focusEditableElement(this.DecProperty.current);\r\n        return (\r\n            <li className={\"css_declaration \" + this.state.decClass}>\r\n                <span className=\"space_and_comments start\">{this.state.startComment}</span>\r\n                <span\r\n                    className=\"dec_property\"\r\n                    spellCheck=\"false\"\r\n                    contentEditable=\"false\"\r\n                    ref={this.DecProperty}\r\n                    onKeyDown={(e) => this.propertyKeyListener(e)}\r\n                    onBlur={(e) => this.handleBlur(e, false)}\r\n                    onMouseDown={(e) => clickEditable(e)}\r\n                    onKeyUp={() => this.handleChange()}>\r\n                        {this.props.property}\r\n                    </span>\r\n                <span>:&nbsp;</span>\r\n                <span\r\n                    className=\"dec_value\"\r\n                    spellCheck=\"false\"\r\n                    contentEditable=\"false\"\r\n                    ref={this.DecValue}\r\n                    onKeyDown={(e) => this.valueKeyListener(e)}\r\n                    onKeyUp={() => this.handleChange()}\r\n                    onBlur={(e) => this.handleBlur(e, true)}\r\n                    onMouseDown={(e) => clickEditable(e)}>\r\n                        {this.props.value}\r\n                    </span>\r\n                <span>;</span>\r\n                <span className=\"space_and_comments end\">{this.state.endComment}</span>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Declaration;\r\n\r\n\r\n/*<input\r\n  className=\"comment\"\r\n  type=\"checkbox\"\r\n  onMouseEnter={(e) => this.handleMouse(false)}\r\n  onMouseLeave={(e) => this.handleMouse(true)}\r\n  onChange={(e) => this.handleCheckChange(e)}\r\n  ref={this.Checkbox}/>    \r\n  */                                                                                     \r\n\r\n","import React from \"react\";\r\nimport Declaration from \"./Declaration.js\"\r\nimport {preventKeyDefault, onBlur, clickEditable} from \"./CssEditorFunctions.js\";\r\n\r\nclass CSSRule extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: true,\r\n            items: [],\r\n            focusSwitch: false\r\n        };\r\n        this.key = 0;\r\n        this.focusedID = false;\r\n    }\r\n\r\n    handleMouseDown(e) {\r\n        const target = e.target;\r\n        if ((target.classList.contains(\"css_rule\") || target.classList.contains(\"css_declarations\")) && (document.activeElement.classList.contains(\"dec_property\") && !document.activeElement.textContent.trim())) \r\n            e.preventDefault();\r\n        }\r\n    \r\n    handleMouseUp(e) {\r\n        const target = e.target;\r\n        if (target.classList.contains(\"css_rule\") || target.classList.contains(\"css_declarations\")) {\r\n            e.preventDefault();\r\n            if (document.activeElement.classList.contains(\"dec_property\") && !document.activeElement.textContent.trim()) \r\n                document.activeElement.blur();\r\n            else \r\n                this.addDeclaration();\r\n            }\r\n        }\r\n\r\n    selectorKeyListener(e) {\r\n        if (preventKeyDefault(e) === 13) {\r\n            let target = e.target;\r\n            if (target.textContent.trim()) \r\n                (this.state.items.length)\r\n                    ? this.focusNext(this.state.items[0].id)\r\n                    : this.addDeclaration();\r\n            else \r\n                target.blur();\r\n            }\r\n        }\r\n\r\n    focusNext = (next) => {\r\n        this.focusedID = next;\r\n        this.setState({\r\n            focusSwitch: !this.state.focusSwitch\r\n        });\r\n    }\r\n\r\n    initializeDeclarations = () => {\r\n        let newItem = null, dec = [];\r\n        let items = [];\r\n        \r\n        this.props.style.split(\";\").forEach(declaration => {\r\n            if(declaration !== \"\") {\r\n                dec = declaration.split(\":\");\r\n                newItem = {\r\n                    id: this.key++,\r\n                    property: dec[0].trim(),\r\n                    value: dec[1].trim()\r\n                };\r\n                items.push(newItem);\r\n            }\r\n        });\r\n        this.setState({items: items});\r\n    }\r\n\r\n    addDeclaration = () => {\r\n        let items = [...this.state.items];\r\n        const newItem = {\r\n            id: this.key,\r\n            property: \"\",\r\n            value: \"\"\r\n        };\r\n        this.key++;\r\n        items.push(newItem);\r\n        this.setState({items: items});\r\n    }\r\n\r\n    removeDeclaration = (id) => {\r\n        let items = [...this.state.items];\r\n        items = this\r\n            .state\r\n            .items\r\n            .filter(item => item.id !== id);\r\n        this.setState({items: items});\r\n    }\r\n\r\n    nextDeclaration = (currentID) => {\r\n        let items = this.state.items;\r\n        let length = items.length;\r\n        for (let i = 0; i < length; i++) {\r\n            if (items[i].id === currentID) {\r\n                (++i < length)\r\n                    ? this.focusNext(this.state.items[i].id)\r\n                    : this.addDeclaration();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    EnDisCheckbox = (nextState) => {\r\n        this.setState({disabled: nextState});\r\n    }\r\n\r\n    handleBlur(e) {\r\n        if (onBlur(e)) \r\n            this.props.remove(this.props.id);\r\n        }\r\n    \r\n    componentDidUpdate() {\r\n        this.focusedID = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initializeDeclarations();\r\n    }\r\n\r\n    render() {\r\n        let disabled = (this.state.disabled)\r\n            ? \"disabled\"\r\n            : \"enabled\";\r\n        let focused;\r\n\r\n        return (\r\n            <div\r\n                className=\"css_rule\"\r\n                onMouseUp=\r\n                {(e) => this.handleMouseUp(e)}\r\n                onMouseDown=\r\n                {(e) =>this.handleMouseDown(e)}>\r\n                <div className=\"css_file\">{this.props.fileName}</div>\r\n                <div className=\"css_selector_container\">\r\n                    <span\r\n                        className=\"css_selector\"\r\n                        spellCheck=\"false\"\r\n                        contentEditable=\"false\">\r\n                        {this.props.selector}\r\n                    </span>\r\n                    <span>&nbsp;&#123;</span>\r\n                </div>\r\n                <ol className={\"css_declarations \" + disabled}>\r\n                    {this\r\n                        .state\r\n                        .items\r\n                        .map((item, i) => {\r\n                            focused = (this.focusedID === item.id);\r\n                            return <Declaration\r\n                                key={item.id}\r\n                                id={item.id}\r\n                                property={item.property}\r\n                                value={item.value}\r\n                                focused={focused}\r\n                                styleObject={this.props.styleObject}\r\n                                nextDec={this.nextDeclaration}\r\n                                EnDisCheckbox={this.EnDisCheckbox}\r\n                                remove={this.removeDeclaration}/>;\r\n                        })}\r\n                </ol>\r\n                <span>&#125;</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CSSRule;\r\n\r\n/**\r\n * from the css selector\r\n *  onKeyDown={(e) => this.selectorKeyListener(e)}\r\n    onBlur={(e) => this.handleBlur(e)}\r\n    onMouseDown={(e) => clickEditable(e)}\r\n */","import React from 'react';\nimport CSSRule from \"./CssRule.js\"\nimport '../styles/cssEditor.css';\n\nclass CSSEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\", //to change when set it to \"<empty>\"\n            items: []\n        };\n        this.key = 0;\n    }\n\n    removeChild = (id) => {\n        let items = [...this.state.items];\n        items = items.filter(item => item.id !== id);\n        this.setState({items: items});\n    }\n\n    getElementsDescription = () => {\n        let description = \"\";\n        if(this.props.elementsCss.element) {\n            let el = this.props.elementsCss.element;\n            description = el.tagName.toLowerCase();\n            description+= (el.id) ? \"#\"+el.id : \"\";\n            el.classList.forEach(class_name => {\n                description+=\".\"+class_name;\n            });\n        }\n        return description;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if(nextProps.elementsCss !== this.props.elementsCss) {\n            var items = [];\n            let newItem = null;\n            nextProps.elementsCss.cssRules.forEach(rule => {\n                newItem = {\n                    id: ++this.key,\n                    fileName: rule.fileName,\n                    selector: rule.css.selectorText,\n                    style: rule.css.style.cssText,\n                    styleObject: rule.css.style\n                };\n                items.unshift(newItem);\n            });\n            this.setState({items: items});\n            return false;\n        } else if ((nextState.value === this.state.value) && (nextState.items === this.state.items)) return false;\n        return true;\n    }\n\n    render() {\n        \n        \n        return (\n            <div id=\"css_editor\">\n                <div id=\"inspected_element\">{this.getElementsDescription()}</div>\n                <div className=\"css_rules\">\n                    {this\n                        .state\n                        .items\n                        .map(item => {\n                            return <CSSRule\n                                key={item.id}\n                                fileName={item.fileName}\n                                selector={item.selector}\n                                style={item.style}\n                                styleObject={item.styleObject}\n                                remove={this.removeChild}\n                                id={item.id}/>;\n                        })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CSSEditor;\n\n/*\nstyle rule = (\n  selector {\n    declaration = (\n      property: value\n    )\n  }\n)\n\n<form id=\"as_form\" onSubmit= {(e) => this.handleSubmit(e)}>\n                    <input\n                        type=\"text\"\n                        id=\"search_add_field\"\n                        name=\"search_add_field\"\n                        placeholder=\"Type and press enter\"\n                        value={this.state.value}\n                        onChange=\n                        {(e) => this.setState({value: e.target.value})}/>\n                    <input type=\"submit\" value=\"Add\"/>\n                </form>\n*/\n\n/*handleSubmit(e) {\n        e.preventDefault();\n        if (this.state.value.trim()) {\n            const newItem = {\n                id: ++this.key,\n                value: this.state.value\n            };\n            let items = [...this.state.items];\n            items.unshift(newItem);\n            this.setState({value: \"\", items: items});\n        }\n    }*/\n","import React from \"react\";\r\nimport Preview from \"./Preview.js\";\r\nimport CSSEditor from \"./CssEditor.js\";\r\n\r\nclass Body extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            elementsCss: {\r\n                element: null,\r\n                cssRules: []\r\n            }\r\n        };\r\n    }\r\n\r\n    setElementsCss = (elementsCss) => {\r\n        this.setState({elementsCss: elementsCss});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"app_body\">\r\n                <div id=\"side_panel\">\r\n                    <CSSEditor elementsCss={this.state.elementsCss}/>\r\n                </div>\r\n                <div id=\"preview_container\">\r\n                    <Preview \r\n                        files={this.props.files} \r\n                        inspect={this.props.inspect}\r\n                        elementsCss={this.setElementsCss}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Body;","import React from \"react\";\r\nimport Header from \"./Header.js\";\r\nimport Body from \"./Body.js\";\r\nimport \"../styles/app.css\";\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            files: {\r\n                html: \"\", //html text\r\n                styleSheets: [] //file and cssText of file\r\n            },\r\n            inspect: false\r\n        };\r\n    }\r\n\r\n    setFiles = (files) => {\r\n        this.setState({files: files});\r\n    }\r\n\r\n    setInspect = (newValue) => {\r\n        this.setState({inspect: newValue});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"app_container\">\r\n                <Header setFiles={this.setFiles} setInspect={this.setInspect}/>\r\n                <Body files={this.state.files} inspect={this.state.inspect}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App.js\"\r\n\r\nReactDOM.render(<App /> ,document.getElementById(\"root\"));"],"sourceRoot":""}